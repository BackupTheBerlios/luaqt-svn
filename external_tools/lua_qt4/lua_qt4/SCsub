Import("env")

debug = ""
if env['qt_debug']:
	debug = "_debug"

core_lib = 'QtCore'+env['qt_append']+debug
gui_lib = 'QtGui'+env['qt_append']+debug

env.Append(CXXFLAGS='-DTOLUA_API="extern \\\"C\\\""')
env.Append(CXXFLAGS=['-DLUA_QT', '-I$QTDIR/include/QtCore', '-I$QTDIR/include/QtGui']+env['extra_cxx_flags'])

env.Append(LIBS=env['tolua_libs']+env['lua_libs'])

env.Append(LIBPATH = ['.']);

helpers_so = env.SharedObject('lua_qt_helpers.cpp')
qobject_so = env.SharedObject('lua_qobject.cpp')
basic_so = env.SharedObject('tolua_basic_types.cpp')

def module_targets(mod, signals=1, extra_libs = [core_lib], CXXFLAGS=[]):

	tolua = env.LuaBinding('lua_qt_'+mod+'.cpp', 'Qt'+mod+'.pkg', 'lua_qt_'+mod, None, "lua_qt4/lua_qt4_hooks.lua");
	env.Depends(tolua, ['hooks.lua'])
	
	lib = "Qt"+mod+env['qt_append']+debug

	list = [tolua]
	if signals:
		env.SideEffect("qt_signal_handlers_lua_qt_"+mod+".cpp", tolua)
		env.Moc("qt_signal_handlers_lua_qt_"+mod+".cpp")
		
		list += ['qt_signal_handlers_lua_qt_'+mod+'.cpp']
	
	list += [helpers_so, qobject_so, basic_so]

	return env.SharedLibrary('lua_qt_'+mod, list,
					LIBS=env['LIBS']+extra_libs+[lib], CXXFLAGS=env['CXXFLAGS']+['-I$QTDIR/include/Qt'+mod]+CXXFLAGS)
	


core = module_targets("Core", extra_libs = [])
gui = module_targets("Gui")
gl = module_targets("OpenGL", signals=0, extra_libs = [core_lib, gui_lib])
net = module_targets("Network")
xml = module_targets("Xml", 0)
sql = module_targets("Sql")
desg = module_targets("Designer", extra_libs = [core_lib, gui_lib])
qt3 = module_targets("3Support", extra_libs = [core_lib, gui_lib])

dummy = module_targets("Dummy", extra_libs = [core_lib, gui_lib])

env.Alias('all', [core, gui, net, xml, sql, gl, desg, qt3])

env.Moc('test.cpp')
env.Program('test', ['test.cpp'], LIBS=env['LIBS']+[core_lib, gui_lib])

env.Program('lua_qt', ['lua_qt.cpp', helpers_so, qobject_so], LIBS=env['LIBS']+[core_lib])
