/*
$#define tolua_toqtstring(L, i, d) QString::fromUtf8(tolua_tostring(L,i,d), -1)
$#define tolua_isqtstring tolua_isstring
$#define tolua_pushqtstring(L,s) tolua_pushstring(L, s.toUtf8().constData())

$#define tolua_toqtflags (int)tolua_tonumber
$#define tolua_isqtflags tolua_isnumber
$#define tolua_pushqtflags tolua_pushnumber
*/

$#define __operator_sub operator[]
$#define __operator_assign operator=
$#define __operator_inc operator++
$#define __operator_dec operator--
$#define __operator_star operator*()

${

static void push_qobject(lua_State* L, void* value, const char* type) {

	if (value == NULL) {
		lua_pushnil(L);
		return;
	};
	QObject* obj = (QObject*)value;
	const char* class_name = obj->metaObject()->className();
	lua_getfield(L, LUA_REGISTRYINDEX, class_name);
	if (lua_isnil(L, -1)) {
		tolua_pushusertype(L, value, type);
	} else {
		tolua_pushusertype(L, value, class_name);
	};
	
	lua_remove(L, -2);
};

$}


// Qt typedefs
typedef unsigned char uchar;
typedef unsigned short ushort;
typedef unsigned int uint;
typedef unsigned long ulong;
typedef unsigned int Q_ULLONG;
typedef unsigned int Q_ULONG;
typedef unsigned short quint16;
typedef long long int qint64;
typedef long long int qlonglong;
typedef double qreal;

$typedef char* arg_list;
$typedef int arg_count;
class arg_list;
class arg_count;

$ifile "lua_qt4/lua_qobject.h"
$#include "lua_qt4/tolua_base.h"
